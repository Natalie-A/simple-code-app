name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14' 

      # Install dependencies 
      - name: Install dependencies
        run: npm install express

      # Scan the code using Snyk
      - name: Snyk Code Scan
        uses: snyk/actions/node@master
        with:
          snyk-token: ${{ secrets.SNYK_TOKEN }} 
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }} 

      # Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t natalieaoya/simple-node-app:latest .

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Push the Docker image to Docker Hub
      - name: Push Docker Image
        run: docker push natalieaoya/simple-node-app:latest

      # Scan the Docker image using Snyk
      - name: Snyk Container Scan
        run: |
          snyk container test natalieaoya/simple-node-app:latest
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }} 

      # Deploy to K8s
        
      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
      
      - name: Isolate envoronments
        run: |
          kubectl create namespace prod
          kubectl create namespace dev

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f rbac.yaml 
          kubectl apply -f service-account.yaml
          kubectl apply -f network-policies.yaml
          kubectl config set-context --current --namespace=prod
          kubectl apply -f prod-deployment.yaml
          kubectl apply -f service.yaml

